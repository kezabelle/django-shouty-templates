Change history for django-shouty-templates
------------------------------------------

0.2.0
^^^^^^
* Bugfix: Updates to ostensibly support Django 4.0+
* Feature: Error loudly when an ``{% if ... %}...{% elif %}`` statement is present without an ``{% else %}``
* Feature: Allow for silencing **all** missing variables within a single given template (or set of templates)
* Bugfix: Attempt to fix parsing of where a missing variable occurs within things like ``{% blocktrans with filter_title=title %}``
* Bugfix: when the ``render_context`` doesn't have a template *or* it's ``None`` it's now properly skipped.

0.1.6
^^^^^^
* Feature: Ignore variables which prevented much of REST Framework's browsable API from working.
* Feature: Ignore variables which would cause the ``django-admin-honeypot`` package's fake login screen to error.
* Feature: Ignore variables which might cause ``django-pipeline`` rendering of ``<link>`` and ``<script>`` to error.
* Bugfix: Improve per-template silencing via ``SHOUTY_VARIABLE_BLACKLIST``
* Bugfix: Attempt to have fewer false positives when highlighting the location in the template of the exception.

0.1.5
^^^^^^
* Feature: system check to validate any ``SHOUTY_VARIABLE_BLACKLIST`` in your settings.
* Feature: Attempt to highlight the exception location in any subtemplate, better than Django currently does.
* Feature: Update exception message with any potential typo candidates.
* Feature: Silencing missing variables on a per-template basis.
* Feature: Deep inspection of ``{% if ... %} {% elif ... %}`` nodes for any which are variables which don't exist.
* Bugfix: Patch methods hidden from the debug error page should now be consistently hidden always, rather than dependant on hitting the expected branch.
* Bugfix: Unit tests now exist to demonstrate how it should behave, at least on Django 2.2~

0.1.4
^^^^^^
* Feature: the patch methods themselves (``new_resolve_lookup`` and ``new_url_render``) are skipped during rendering the debug error page. The exception message and functionality remain the same.
* Feature: exception messages now attempt to clarify what template name (loader relative) was rendering when the missing variable was encountered.
* Chore: Updated the ``mypy`` type signatures for some of the variables and methods to indicate the only values I'm expecting to accept.

0.1.3
^^^^^^
* Feature: Silenced errors when using ``debug`` or ``sql_queries`` in a template, as they're conditionally set by ``django.template.context_processors.debug``

0.1.2
^^^^^^
* Feature: Added 11 new tokens to the default blacklist, covering more of the default Django admin and the default exception reporter.
* Bugfix: Changed the syntax of the ``AppConfig.ready`` method to be py2 type annotation compatible.

0.1.1
^^^^^^
* Initial release
